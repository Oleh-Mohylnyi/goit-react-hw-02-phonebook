{"version":3,"sources":["components/Form/form.module.scss","components/List/list.module.scss","components/ListItem/listItem.module.scss","components/Filter/filter.module.scss","components/Form/Form.js","components/ListItem/ListItem.js","components/List/List.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","saveForm","this","className","s","form","label","type","pattern","title","required","autocomplete","onChange","input","btn","onClick","Component","ListItem","deleteItem","id","deleteContact","filtredContacts","length","changeCheckbox","classNameBtn","checboxForEdit","map","contact","style","indexOf","backgroundColor","item","contactSpan","List","edit","handleCheckbox","checked","status","classNameCheckbox","contactsList","hidden","list","Filter","filter","App","contacts","handleFilterChange","onSubmit","find","alert","saveContact","newContact","uuid","prevState","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f31983.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__oKlKm\",\"label\":\"form_label__14Gtg\",\"input\":\"form_input__1ucsV\",\"btn\":\"form_btn__20OJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"list_contactsList__3BTPw\",\"list\":\"list_list__2XsKn\",\"hidden\":\"list_hidden__1L9AM\",\"checkboxEdit\":\"list_checkboxEdit__34l5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"listItem_item__2JuYC\",\"btn_delete\":\"listItem_btn_delete__2Xwpv\",\"contactSpan\":\"listItem_contactSpan__2GjW_\",\"hidden-visually\":\"listItem_hidden-visually__2xXfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__2WOpW\"};","import React, { Component } from \"react\"\nimport s from './form.module.scss'\n\nexport default class Form extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n    \n    handleChange = (e) => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const {name, number} = this.state\n        this.props.saveForm(name, number)\n        this.setState({ name: '', number: ''})\n        }\n\n    render() {\n        const {name, number} = this.state\n        return (\n            <form className={s.form}>\n                <label className={s.label}> Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                  autocomplete=\"off\"\n                  onChange = {this.handleChange}\n                  value={name}\n                  className={s.input}\n                />\n                </label>\n                <br/>\n                <label className={s.label}> Number\n                <input\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                  required\n                  autocomplete=\"off\"\n                  onChange = {this.handleChange}\n                  value={number}\n                  className={s.input}\n                />\n                </label>\n                <br/>\n                <button\n                    type=\"submit\"\n                    className={s.btn}\n                    onClick = {this.handleSubmit}>\n                    Add contact\n                </button>\n            </form>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport s from './listItem.module.scss'\n\nexport default class ListItem extends Component {\n    \n    deleteItem = (id) => {\n        this.props.deleteContact(id)\n        if (this.props.filtredContacts.length < 2) {\n            this.props.changeCheckbox(false)\n        }\n    }\n\n    \n    render() {\n        let classNameBtn = 'btn_delete'\n        if (!this.props.checboxForEdit) {\n        classNameBtn += ' hidden'\n        }\n        \n        return (\n            <>\n            {this.props.filtredContacts.map((contact) => (\n                <li\n                    key={contact.id}\n                    style={this.props.filtredContacts.indexOf(contact) % 2 !== 0\n                        ? { backgroundColor: 'transparent' }\n                        : { backgroundColor: 'white' }}\n                    className={s.item}>\n                    <div className={s.contactSpan}>\n                    <span>{contact.name} </span>\n                    <span>{contact.number} </span>\n                    </div>\n                    <button\n                        type=\"button\"\n                        className={classNameBtn}\n                        onClick={() => this.deleteItem(contact.id)}>\n                        Delete\n                    </button>\n                </li> )) }\n            </>)\n    }   \n}\n    ","import React, {Component} from \"react\"\nimport ListItem from \"../ListItem/ListItem\"\nimport s from './list.module.scss'\n\nexport default class List extends Component {\n    state = {\n        edit: false\n    }\n\n    handleCheckbox = (e) => {\n        this.setState({ edit: e.target.checked })\n    }\n\n    changeCheckbox = (status) => {\n        this.setState({ edit: status })\n    }\n\n    render() {\n        let classNameCheckbox = 'checkboxEdit'\n        if (this.state.edit) {\n        classNameCheckbox += ' checkboxEditActive'\n        }\n\n        const {filtredContacts, deleteContact} = this.props\n\n        return (\n            <div className={s.contactsList}>\n                {filtredContacts.length > 0\n                    ? (<label\n                        className={classNameCheckbox}>\n                        Edit\n                        <input\n                        type=\"checkbox\"\n                            className={s.hidden}\n                            checked={this.state.edit}\n                            onChange={this.handleCheckbox}\n                        />\n                        </label>)\n                    : (<></>)\n                }    \n                <ul className={s.list}>\n                    <ListItem\n                        filtredContacts={filtredContacts}\n                        changeCheckbox={this.changeCheckbox}\n                        checboxForEdit={this.state.edit}\n                        deleteContact={deleteContact}\n                    />\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport s from './filter.module.scss'\n\nexport default class Filter extends Component {\n\n    render() {\n        const {handleChange, filter} = this.props\n\n        return (\n            <label className={s.label}>\n                Find contacts by name \n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={s.input}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                autocomplete=\"off\"\n                onChange = {handleChange}\n                value = {filter}>\n            </input>\n            </label>\n        )\n    }\n    \n}","// import logo from './logo.svg';\nimport React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport List from './components/List'\nimport { v4 as uuid } from 'uuid';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  }\n\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.target.value })\n  }\n\n  onSubmit = (name, number) => {\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`)\n    } else {\n      this.saveContact({ name, number })\n    }\n  }\n\n  saveContact = (newContact) => {\n    const {name, number} = newContact\n    const contact = {\n      id: uuid(),\n      name,\n      number\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\n    }))\n  }\n\n  render() {\n\n    const filtredContacts =\n      this.state.contacts.filter(\n        contact => contact.name.toLowerCase().includes(\n          this.state.filter.toLowerCase()))\n\n    return (\n      <div className=\"app\">\n        <h1>Phonebook</h1>\n        <Form\n          saveForm={this.onSubmit}\n          />\n        \n        {this.state.contacts.length > 0 \n          ? (<>\n            <h2>Contacts</h2>\n            <Filter\n                handleChange={this.handleFilterChange}\n                filter={this.state.filter} />\n            </>)\n          : (<p>no contacts at the moment</p>)\n        }\n        <List\n          filtredContacts={filtredContacts}\n          deleteContact={this.deleteContact}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}