{"version":3,"sources":["components/Form/form.module.scss","components/List/list.module.scss","components/ListItem/listItem.module.scss","components/Filter/filter.module.scss","components/Form/Form.js","components/ListItem/ListItem.js","components/List/List.js","components/Filter/Filter.js","App/App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","alert","test","props","saveForm","this","className","s","form","label","type","pattern","title","required","autoComplete","onChange","input","btn","onClick","Component","defaultProps","ListItem","filtredContacts","deleteContact","changeCheckbox","statusCheckbox","classNameBtn","map","contact","style","indexOf","backgroundColor","item","contactSpan","id","length","List","switchEditStatus","handleCheckbox","checked","classNameCheckbox","contactsList","hidden","list","Filter","filter","App","contacts","handleFilterChange","onSubmit","find","toLowerCase","saveContact","newContact","uuid","prevState","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,IAAM,oB,oBCA1GD,EAAOC,QAAU,CAAC,aAAe,2BAA2B,KAAO,mBAAmB,OAAS,qBAAqB,aAAe,6B,iBCAnID,EAAOC,QAAU,CAAC,KAAO,uBAAuB,WAAa,6BAA6B,YAAc,8BAA8B,kBAAkB,oC,gBCAxJD,EAAOC,QAAU,CAAC,MAAQ,wB,+MCGLC,E,4MACjBC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,aAAe,SAACC,GACZ,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG5BE,aAAe,SAACJ,GACZA,EAAEK,iBACF,MAAyB,EAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAID,KAATD,GAA0B,KAAXC,EACnBQ,MAAM,gDAHU,yHAKKC,KAAKV,GANR,6EASKU,KAAKT,IAGpB,EAAKU,MAAMC,SAASZ,EAAMC,GAC1B,EAAKK,SAAS,CAAEN,KAAM,GAAIC,OAAQ,MAH9BQ,MAAM,iiBAHNA,MAAM,oc,4CAYtB,WACI,MAAuBI,KAAKd,MAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OACb,OACI,uBAAMa,UAAWC,IAAEC,KAAnB,UACI,wBAAOF,UAAWC,IAAEE,MAApB,kBACA,uBACEC,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,aAAa,MACbC,SAAYV,KAAKX,aACjBG,MAAOL,EACPc,UAAWC,IAAES,WAGf,uBACA,wBAAOV,UAAWC,IAAEE,MAApB,oBACA,uBACEC,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,aAAa,MACbC,SAAYV,KAAKX,aACjBG,MAAOJ,EACPa,UAAWC,IAAES,WAGf,uBACA,wBACIN,KAAK,SACLJ,UAAWC,IAAEU,IACbC,QAAWb,KAAKN,aAHpB,gC,GAjEkBoB,aA6ElC7B,EAAK8B,aAAe,CAChB1B,aAAc,aACdK,aAAc,c,oBC/EH,SAASsB,EAAT,GAIQ,IAHnBC,EAGkB,EAHlBA,gBACAC,EAEkB,EAFlBA,cACAC,EACkB,EADlBA,eACAC,EAAkB,EAAlBA,eASIC,EAAe,aAKnB,OAJKD,IACDC,GAAgB,WAIhB,mCACKJ,EAAgBK,KAAI,SAACC,GAAD,OACjB,qBAEIC,MAAOP,EAAgBQ,QAAQF,GAAW,IAAM,EAC1C,CAAEG,gBAAiB,eACnB,CAAEA,gBAAiB,SACzBzB,UAAWC,IAAEyB,KALjB,UAMI,sBAAK1B,UAAWC,IAAE0B,YAAlB,UACI,iCAAOL,EAAQpC,KAAf,OACA,iCAAOoC,EAAQnC,OAAf,UAEJ,wBACIiB,KAAK,SACLJ,UAAWoB,EACXR,QAAS,kBA5BTgB,EA4B0BN,EAAQM,GA3BlDX,EAAcW,QACVZ,EAAgBa,OAAS,GACzBX,GAAe,IAHJ,IAACU,GAyBJ,sBATKN,EAAQM,S,oBCrBZE,E,4MACjB7C,MAAQ,CACJ8C,kBAAkB,G,EAGtBC,eAAiB,SAAC3C,GACd,EAAKG,SAAS,CAAEuC,iBAAkB1C,EAAEC,OAAO2C,W,EAG/Cf,eAAiB,SAACa,GACd,EAAKvC,SAAS,CAAEuC,sB,4CAGpB,WACI,IAAOA,EAAoBhC,KAAKd,MAAzB8C,iBACHG,EAAoB,eACpBH,IACJG,GAAqB,uBAErB,MAAyCnC,KAAKF,MAAvCmB,EAAP,EAAOA,gBAAiBC,EAAxB,EAAwBA,cAExB,OACI,sBAAKjB,UAAWC,IAAEkC,aAAlB,UACKnB,EAAgBa,OAAS,EACnB,wBACC7B,UAAWkC,EADZ,iBAGC,uBACA9B,KAAK,WACDJ,UAAWC,IAAEmC,OACbH,QAASF,EACTtB,SAAUV,KAAKiC,oBAGrB,KAEN,oBAAIhC,UAAWC,IAAEoC,KAAjB,SACI,cAACtB,EAAD,CACIC,gBAAiBA,EACjBE,eAAgBnB,KAAKmB,eACrBC,eAAgBY,EAChBd,cAAeA,a,GAzCLJ,aAiDlCiB,EAAKhB,aAAe,CAChBE,gBAAiB,GACjBC,cAAe,c,6BCpDJ,SAASqB,EAAT,GAA6C,IAA3BlD,EAA0B,EAA1BA,aAA0B,IAAZmD,cAAY,MAAL,GAAK,EAEvD,OACI,wBAAOvC,UAAWC,IAAEE,MAApB,kCAEA,uBACIC,KAAK,OACLlB,KAAK,SACLc,UAAWC,IAAES,MACbL,QAAQ,yHACRC,MAAM,kcACNE,aAAa,MACbC,SAAYrB,EACZG,MAASgD,O,ICRfC,E,4MAEJvD,MAAQ,CACNwD,SAAU,CACR,CAAEb,GAAI,OAAQ1C,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyC,GAAI,OAAQ1C,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEyC,GAAI,OAAQ1C,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyC,GAAI,OAAQ1C,KAAM,iBAAkBC,OAAQ,cAEhDoD,OAAQ,I,EAGVG,mBAAqB,SAACrD,GACpB,EAAKG,SAAS,CAAE+C,OAAQlD,EAAEC,OAAOC,S,EAKnCoD,SAAW,SAACzD,EAAMC,GAEZ,EAAKF,MAAMwD,SAASG,MAAK,SAAAtB,GAAO,OAAIA,EAAQpC,KAAK2D,gBAAkB3D,EAAK2D,iBAC1ElD,MAAM,GAAD,OAAIT,EAAJ,4BAEL,EAAK4D,YAAY,CAAE5D,OAAMC,Y,EAI7B2D,YAAc,SAACC,GACb,IAAO7D,EAAgB6D,EAAhB7D,KAAMC,EAAU4D,EAAV5D,OACPmC,EAAU,CACdM,GAAIoB,cACJ9D,OACAC,UAEF,EAAKK,UAAS,gBAAGiD,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEnB,GAAH,mBAAemB,S,EAI3BxB,cAAgB,SAAAW,GACd,EAAKpC,UAAS,SAAAyD,GAAS,MAAK,CAC1BR,SAAUQ,EAAUR,SAASF,QAAO,SAAAjB,GAAO,OAAIA,EAAQM,KAAOA,U,4CAIlE,WAAU,IAAD,OAEDZ,EACJjB,KAAKd,MAAMwD,SAASF,QAClB,SAAAjB,GAAO,OAAIA,EAAQpC,KAAK2D,cAAcK,SACpC,EAAKjE,MAAMsD,OAAOM,kBAExB,OACE,sBAAK7C,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CACEF,SAAUC,KAAK4C,WAGhB5C,KAAKd,MAAMwD,SAASZ,OAAS,EACzB,qCACD,0CACA,cAACS,EAAD,CACIlD,aAAcW,KAAK2C,mBACnBH,OAAQxC,KAAKd,MAAMsD,YAEtB,0DAEL,cAAC,EAAD,CACEvB,gBAAiBA,EACjBC,cAAelB,KAAKkB,uB,GAtEZJ,aA6EH2B,IChFfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e0b9769.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__oKlKm\",\"label\":\"form_label__14Gtg\",\"input\":\"form_input__1ucsV\",\"btn\":\"form_btn__20OJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"list_contactsList__3BTPw\",\"list\":\"list_list__2XsKn\",\"hidden\":\"list_hidden__1L9AM\",\"checkboxEdit\":\"list_checkboxEdit__34l5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"listItem_item__2JuYC\",\"btn_delete\":\"listItem_btn_delete__2Xwpv\",\"contactSpan\":\"listItem_contactSpan__2GjW_\",\"hidden-visually\":\"listItem_hidden-visually__2xXfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__2WOpW\"};","import React, { Component } from \"react\"\nimport s from './form.module.scss'\nimport PropTypes from 'prop-types'\n\nexport default class Form extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n    \n    handleChange = (e) => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const { name, number } = this.state\n        const regNumber = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/\n        const regName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/\n        \n        if (name === '' || number === '') {\n        alert(\"Do not save contact without a name or number\")\n            } else {\n                if (!regName.test(name)) {\n                    alert(\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\")\n            } else {\n                if (!regNumber.test(number)) {\n                    alert(\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\")\n            } else {\n                this.props.saveForm(name, number)\n                this.setState({ name: '', number: ''})\n            }\n            }\n        }\n    }\n\n    render() {\n        const {name, number} = this.state\n        return (\n            <form className={s.form}>\n                <label className={s.label}> Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                  autoComplete=\"off\"\n                  onChange = {this.handleChange}\n                  value={name}\n                  className={s.input}\n                />\n                </label>\n                <br/>\n                <label className={s.label}> Number\n                <input\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                  required\n                  autoComplete=\"off\"\n                  onChange = {this.handleChange}\n                  value={number}\n                  className={s.input}\n                />\n                </label>\n                <br/>\n                <button\n                    type=\"submit\"\n                    className={s.btn}\n                    onClick = {this.handleSubmit}>\n                    Add contact\n                </button>\n                \n            </form>\n        )\n    }\n}\n\nForm.defaultProps = {\n    handleChange: () => { },\n    handleSubmit: () => { }\n}\n\nForm.propTypes = {\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n}","import React from \"react\";\nimport s from './listItem.module.scss'\nimport PropTypes from 'prop-types'\n\nexport default function ListItem({\n    filtredContacts,\n    deleteContact,\n    changeCheckbox,\n    statusCheckbox }) {\n    \n    const deleteItem = (id) => {\n        deleteContact(id)\n        if (filtredContacts.length < 2) {\n            changeCheckbox(false)\n        }\n    }\n\n    let classNameBtn = 'btn_delete'\n    if (!statusCheckbox) {\n        classNameBtn += ' hidden'\n    }\n        \n    return (\n        <>\n            {filtredContacts.map((contact) => (\n                <li\n                    key={contact.id}\n                    style={filtredContacts.indexOf(contact) % 2 !== 0\n                        ? { backgroundColor: 'transparent' }\n                        : { backgroundColor: 'white' }}\n                    className={s.item}>\n                    <div className={s.contactSpan}>\n                        <span>{contact.name} </span>\n                        <span>{contact.number} </span>\n                    </div>\n                    <button\n                        type=\"button\"\n                        className={classNameBtn}\n                        onClick={() => deleteItem(contact.id)}>\n                        Delete\n                    </button>\n                </li>))}\n        </>)\n}\n\nListItem.propTypes = {\n    changeCheckbox: PropTypes.func,\n    // deleteContact: PropTypes.func,\n    // filtredContacts: PropTypes.arrayOf(\n    //     PropTypes.shape({\n    //         id: PropTypes.string,\n    //         name: PropTypes.string,\n    //         number: PropTypes.string\n    //     }))\n    }","import React, {Component} from \"react\"\nimport ListItem from \"../ListItem/ListItem\"\nimport s from './list.module.scss'\nimport PropTypes from 'prop-types'\n\nexport default class List extends Component {\n    state = {\n        switchEditStatus: false\n    }\n\n    handleCheckbox = (e) => {\n        this.setState({ switchEditStatus: e.target.checked })\n    }\n\n    changeCheckbox = (switchEditStatus) => {\n        this.setState({ switchEditStatus })\n    }\n\n    render() {\n        const {switchEditStatus} = this.state\n        let classNameCheckbox = 'checkboxEdit'\n        if (switchEditStatus) {\n        classNameCheckbox += ' checkboxEditActive'\n        }\n        const {filtredContacts, deleteContact} = this.props\n\n        return (\n            <div className={s.contactsList}>\n                {filtredContacts.length > 0\n                    ? (<label\n                        className={classNameCheckbox}>\n                        Edit\n                        <input\n                        type=\"checkbox\"\n                            className={s.hidden}\n                            checked={switchEditStatus}\n                            onChange={this.handleCheckbox}\n                        />\n                        </label>)\n                    : null\n                }    \n                <ul className={s.list}>\n                    <ListItem\n                        filtredContacts={filtredContacts}\n                        changeCheckbox={this.changeCheckbox}\n                        statusCheckbox={switchEditStatus}\n                        deleteContact={deleteContact}\n                    />\n                </ul>\n            </div>\n        )\n    }\n}\n\nList.defaultProps = {\n    filtredContacts: {},\n    deleteContact: () => { },\n}\n\nList.propTypes = {\n    deleteContact: PropTypes.func,\n    filtredContacts: PropTypes.array\n    }","import React from \"react\";\nimport s from './filter.module.scss'\nimport PropTypes from 'prop-types'\n\nexport default function Filter ({handleChange, filter=''}) {\n\n    return (\n        <label className={s.label}>\n            Find contacts by name \n        <input\n            type=\"text\"\n            name=\"filter\"\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            autoComplete=\"off\"\n            onChange = {handleChange}\n            value = {filter}>\n        </input>\n        </label>\n    )\n}\n\nFilter.propTypes = {\n    handleChange: PropTypes.func,\n    filter: PropTypes.string,\n}","// import logo from './logo.svg';\nimport React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Form from '../components/Form'\nimport List from '../components/List'\nimport { v4 as uuid } from 'uuid';\nimport Filter from '../components/Filter';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  }\n\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.target.value })\n  }\n\n  // regNumber = /+?/d{1,4}?[-./s]?/(?/d{1,3}?/)?[-./s]?/d{1,4}[-./s]?/d{1,4}[-./s]?/d{1,9}\n\n  onSubmit = (name, number) => {\n    \n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`)\n    } else {\n      this.saveContact({ name, number })\n    }\n  }\n\n  saveContact = (newContact) => {\n    const {name, number} = newContact\n    const contact = {\n      id: uuid(),\n      name,\n      number\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\n    }))\n  }\n\n  render() {\n\n    const filtredContacts =\n      this.state.contacts.filter(\n        contact => contact.name.toLowerCase().includes(\n          this.state.filter.toLowerCase()))\n\n    return (\n      <div className=\"app\">\n        <h1>Phonebook</h1>\n        <Form\n          saveForm={this.onSubmit}\n          />\n        \n        {this.state.contacts.length > 0 \n          ? (<>\n            <h2>Contacts</h2>\n            <Filter\n                handleChange={this.handleFilterChange}\n                filter={this.state.filter} />\n            </>)\n          : (<p>no contacts at the moment</p>)\n        }\n        <List\n          filtredContacts={filtredContacts}\n          deleteContact={this.deleteContact}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}