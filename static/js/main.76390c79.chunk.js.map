{"version":3,"sources":["components/Form/form.module.scss","components/List/list.module.scss","components/ListItem/listItem.module.scss","components/Filter/filter.module.scss","components/Form/Form.js","components/ListItem/ListItem.js","components/List/List.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","saveForm","this","className","s","form","label","type","pattern","title","required","onChange","input","btn","onClick","Component","ListItem","deleteItem","id","deleteContact","filtredContacts","length","changeCheckbox","classNameBtn","checboxForEdit","map","contact","style","indexOf","backgroundColor","item","contactSpan","List","edit","handleCheckbox","checked","status","classNameCheckbox","contactsList","hidden","list","Filter","filter","App","contacts","handleFilterChange","onSubmit","find","alert","saveContact","newContact","uuid","prevState","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76390c79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__oKlKm\",\"label\":\"form_label__14Gtg\",\"input\":\"form_input__1ucsV\",\"btn\":\"form_btn__20OJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"list_contactsList__3BTPw\",\"list\":\"list_list__2XsKn\",\"hidden\":\"list_hidden__1L9AM\",\"checkboxEdit\":\"list_checkboxEdit__34l5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"listItem_item__2JuYC\",\"btn_delete\":\"listItem_btn_delete__2Xwpv\",\"contactSpan\":\"listItem_contactSpan__2GjW_\",\"hidden-visually\":\"listItem_hidden-visually__2xXfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__2WOpW\"};","import React, { Component } from \"react\"\nimport s from './form.module.scss'\n\nexport default class Form extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n    \n    handleChange = (e) => {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const {name, number} = this.state\n        this.props.saveForm(name, number)\n        this.setState({ name: '', number: ''})\n        }\n\n    render() {\n        const {name, number} = this.state\n        return (\n            <form className={s.form}>\n                <label className={s.label}> Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                  onChange = {this.handleChange}\n                  value={name}\n                  className={s.input}\n                />\n                </label>\n                <br/>\n                <label className={s.label}> Number\n                <input\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                  required\n                  onChange = {this.handleChange}\n                  value={number}\n                  className={s.input}\n                />\n                </label>\n                <br/>\n                <button\n                    type=\"submit\"\n                    className={s.btn}\n                    onClick = {this.handleSubmit}>\n                    Add contact\n                </button>\n            </form>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport s from './listItem.module.scss'\n\nexport default class ListItem extends Component {\n    \n    // filterContact = () => {\n    //     const {name} = this.props.contacts;\n    //     const nameContact = name.toLowerCase();\n    //     const filter = this.props.filter.toLowerCase();\n    //     nameContact.includes(filter) ? true : false\n    // }\n    deleteItem = (id) => {\n        this.props.deleteContact(id)\n        if (this.props.filtredContacts.length < 2) {\n            this.props.changeCheckbox(false)\n        }\n    }\n\n    \n    render() {\n        let classNameBtn = 'btn_delete'\n        if (!this.props.checboxForEdit) {\n        classNameBtn += ' hidden'\n        }\n        \n        \n        \n        return (\n            <>\n                {this.props.filtredContacts.map((contact) => (\n                    <li\n                        key={contact.id}\n                        style={this.props.filtredContacts.indexOf(contact) % 2 !==0 ? {backgroundColor: 'transparent'} : {backgroundColor: 'white'} }\n                        className={s.item}>\n                        <div className={s.contactSpan}>\n                        <span>{contact.name} </span>\n                        <span>{contact.number} </span>\n                        </div>\n                        <button\n                            type=\"button\"\n                            className={classNameBtn}\n                            onClick={() => this.deleteItem(contact.id)}>\n                            Delete\n                        </button>\n                    </li> )) }\n            </>)\n    }   \n}\n    ","import React, {Component} from \"react\"\nimport ListItem from \"../ListItem/ListItem\"\nimport s from './list.module.scss'\n\nexport default class List extends Component {\n    state = {\n        edit: false\n    }\n\n    handleCheckbox = (e) => {\n        this.setState({ edit: e.target.checked })\n    }\n\n    changeCheckbox = (status) => {\n        this.setState({ edit: status })\n    }\n\n    render() {\n        let classNameCheckbox = 'checkboxEdit'\n        if (this.state.edit) {\n        classNameCheckbox += ' checkboxEditActive'\n        }\n\n        return (\n            <div className={s.contactsList}>\n                {this.props.filtredContacts.length > 0\n                    ? (<label\n                        className={classNameCheckbox}>\n                        Edit\n                        <input\n                        type=\"checkbox\"\n                            className={s.hidden}\n                            checked={this.state.edit}\n                            onChange={this.handleCheckbox}\n                        />\n                        </label>)\n                    : (<></>)\n                }    \n                <ul className={s.list}>\n                    <ListItem\n                        filtredContacts={this.props.filtredContacts}\n                        changeCheckbox={this.changeCheckbox}\n                        checboxForEdit={this.state.edit}\n                        deleteContact={this.props.deleteContact}\n                    />\n                </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport s from './filter.module.scss'\n\nexport default class Filter extends Component {\n\n    render() {\n        return (\n            <label className={s.label}>\n                Find contacts by name \n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={s.input}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                onChange = {this.props.handleChange}\n                value = {this.props.filter}>\n            </input>\n            </label>\n        )\n    }\n    \n}","// import logo from './logo.svg';\nimport React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport List from './components/List'\nimport { v4 as uuid } from 'uuid';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  }\n\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.target.value })\n  }\n\n  onSubmit = (name, number) => {\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`)\n    } else {\n      this.saveContact({ name, number })\n    }\n  }\n\n  saveContact = (newContact) => {\n    const {name, number} = newContact\n    const contact = {\n      id: uuid(),\n      name,\n      number\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\n    }))\n  }\n\n  render() {\n\n    const filtredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))\n\n    return (\n      <div className=\"app\">\n        <h1>Phonebook</h1>\n        <Form\n          saveForm={this.onSubmit}\n          />\n        \n        {this.state.contacts.length > 0 \n          ? (<>\n            <h2>Contacts</h2>\n            <Filter\n                handleChange={this.handleFilterChange}\n                filter={this.state.filter} />\n            </>)\n          : (<p>no contacts at the moment</p>)\n        }\n        <List\n          filtredContacts={filtredContacts}\n          deleteContact={this.deleteContact}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}